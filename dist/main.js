/*! For license information please see main.js.LICENSE.txt */
(()=>{"use strict";var __webpack_modules__={"./src/script.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n;// CONCATENATED MODULE: ./src/graphics/Graphics.js\nclass Graphics {\r\n  constructor(context) {\r\n    this.chart = new Chart(context, {\r\n      type: "line",\r\n      data: {\r\n        labels: [],\r\n        datasets: [\r\n          {\r\n            label: "",\r\n            data: [],\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        scales: {\r\n          y: {\r\n            ticks: {\r\n              maxTicksLimit: 5,\r\n            },\r\n          },\r\n        },\r\n      },\r\n    });\r\n  }\r\n  reset() {\r\n    this.chart.data = {\r\n      labels: [],\r\n      datasets: [\r\n        {\r\n          label: "",\r\n          data: [],\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  push(data) {\r\n    if (!data.name) return;\r\n    const [currentName] = data?.name?.split("/");\r\n    this.chart.data.labels.push(data?.hoursAndSeconds);\r\n    this.chart.data.datasets.forEach((currentDataset) => {\r\n      currentDataset.label = currentName;\r\n      currentDataset.data.push(data?.ask.value);\r\n    });\r\n\r\n    if (this.chart.data.datasets[0].data.length > 5) {\r\n      this.chart.data.datasets[0].data.shift();\r\n      this.chart.data.labels.shift();\r\n    }\r\n\r\n    this.chart.update();\r\n  }\r\n}\r\n\n;// CONCATENATED MODULE: ./src/util/currencys.js\nconst currencys = ["BRL", "USD", "EUR", "BTC", "JPY"];\r\nconst combinations = [];\r\n\r\nfor (let i = 0; i < currencys.length; i++) {\r\n  for (let j = 0; j < currencys.length; j++) {\r\n    if (i !== j) {\r\n      const combination = `${currencys[i]}-${currencys[j]}`;\r\n      combinations.push(combination);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\n;// CONCATENATED MODULE: ./src/works/api.worker.js\nfunction Worker_fn() {\n  return new Worker(__webpack_require__.p + "api.worker.worker.js");\n}\n\n;// CONCATENATED MODULE: ./src/works/conversao.worker.js\nfunction conversao_worker_Worker_fn() {\n  return new Worker(__webpack_require__.p + "conversao.worker.worker.js");\n}\n\n;// CONCATENATED MODULE: ./src/style.css\n// extracted by mini-css-extract-plugin\n\n;// CONCATENATED MODULE: ./src/util/generateDate.js\nconst month = [\r\n  "Jan",\r\n  "Fev",\r\n  "Mar",\r\n  "Abr",\r\n  "Mai",\r\n  "Jun",\r\n  "Jul",\r\n  "Ago",\r\n  "Set",\r\n  "Out",\r\n  "Nov",\r\n  "Dez",\r\n];\r\n\r\nfunction generateDate() {\r\n  const date = new Date();\r\n  const day = date.getDay().toString().padStart(2, "0");\r\n  const monthIndex = date.getMonth();\r\n  const year = date.getFullYear();\r\n  const hour = date.getHours().toString().padStart(2, "0");\r\n  const min = date.getMinutes().toString().padStart(2, "0");\r\n\r\n  return `${day} de ${month[monthIndex]}., ${hour}:${min} UTC-3`;\r\n}\r\n\r\nfunction generateHoursAndSeconds() {\r\n  const date = new Date();\r\n  const day = date.getDay().toString().padStart(2, "0");\r\n  const monthIndex = date.getMonth();\r\n  const year = date.getFullYear();\r\n  const hour = date.getHours().toString().padStart(2, "0");\r\n  const min = date.getMinutes().toString().padStart(2, "0");\r\n  const seconds = date.getSeconds().toString().padStart(2, "0");\r\n\r\n  return `${hour}h${min}m${seconds}`;\r\n}\r\n\n;// CONCATENATED MODULE: ./src/service/WorkerService.js\n\r\n\r\n\r\nclass WorkerService {\r\n  constructor() {\r\n    this.api = new Worker_fn();\r\n    this.conversor = new conversao_worker_Worker_fn();\r\n    this.asks = new Map();\r\n    this.currentMoney = new Map();\r\n  }\r\n  apiPostMessage(currencyQuote) {\r\n    this.api.postMessage(currencyQuote);\r\n  }\r\n  conversorPostMessage(currencyQuote) {\r\n    this.conversor.postMessage(currencyQuote);\r\n  }\r\n  apiEvent(HOC) {\r\n    this.api.addEventListener("message", (e) => {\r\n      this.asks.set(e.data.ask.id, e.data.ask.value);\r\n      HOC(e);\r\n    });\r\n  }\r\n  kill() {\r\n    this.api.terminate();\r\n  }\r\n  conversorEvent(currencyQuote) {\r\n    this.conversor.postMessage(currencyQuote);\r\n  }\r\n}\r\n\n;// CONCATENATED MODULE: ./src/script.js\n\r\n\r\n\r\n\r\n\r\n\r\nconst graphicContainerElement = document.querySelector(".graphic-container");\r\nconst containerElement = document.querySelector(".container");\r\nconst loaderElement = document.querySelector(".loader");\r\nconst dateElement = document.querySelector(".date");\r\nconst exchangeRateElement = document.querySelector(".exchange-rate");\r\nconst exchangeCurrencyElement = document.querySelector(".exchange-currency");\r\nconst select1Element = document.querySelector(".select-1");\r\nconst select2Element = document.querySelector(".select-2");\r\nconst inputField1 = document.querySelector(\r\n  ".input-container:nth-child(1) .input-field"\r\n);\r\nconst inputField2 = document.querySelector(\r\n  ".input-container:nth-child(2) .input-field"\r\n);\r\n\r\ncombinations.forEach((currencyQuote, i) => {\r\n  const worker = new WorkerService();\r\n  worker.apiPostMessage(currencyQuote);\r\n\r\n  const div = document.createElement("div");\r\n  const canvaElement = document.createElement("canvas");\r\n  const chart = new Graphics(canvaElement);\r\n  div.appendChild(canvaElement);\r\n  div.setAttribute("id", currencyQuote);\r\n  div.setAttribute("class", "chart");\r\n\r\n  graphicContainerElement.appendChild(div);\r\n\r\n  worker.apiEvent((e) => {\r\n    const id = `${select1Element.value}-${select2Element.value}`;\r\n    inputField1.addEventListener("input", (inputEvent) => {\r\n      if (inputEvent.target.value === "") {\r\n        inputField2.value = "";\r\n      } else if (worker.asks.get(id)) {\r\n        inputField2.value =\r\n          Number(worker.asks.get(id)) * Number(inputEvent.target.value);\r\n      }\r\n    });\r\n\r\n    inputField2.addEventListener("input", (inputEvent) => {\r\n      if (inputEvent.target.value === "") {\r\n        inputField1.value = "";\r\n      } else if (worker.asks.get(id)) {\r\n        inputField1.value =\r\n          Number(worker.asks.get(id)) * Number(inputEvent.target.value);\r\n      }\r\n    });\r\n\r\n    if (i === combinations.length - 1) {\r\n      graphicContainerElement.setAttribute("class", "graphic-container");\r\n      containerElement.setAttribute("class", "container");\r\n      loaderElement.setAttribute("class", "loader none");\r\n    }\r\n\r\n    dateElement.textContent = e.data.date;\r\n    chart.push(e.data);\r\n  });\r\n\r\n  if (i !== 0) {\r\n    div.setAttribute("class", "none");\r\n  }\r\n});\r\n\r\nconst updateChartDisplay = (value) => {\r\n  const chartSelect = document.getElementById(value);\r\n  const chartCurrenty = document.querySelector(`.chart`);\r\n\r\n  chartCurrenty?.setAttribute("class", "none");\r\n  chartSelect?.setAttribute("class", "chart");\r\n};\r\n\r\nselect1Element.addEventListener("input", (e) => {\r\n  const value = `${e.target.value}-${select2Element.value}`;\r\n  updateChartDisplay(value);\r\n});\r\n\r\nselect2Element.addEventListener("input", (e) => {\r\n  const value = `${select1Element.value}-${e.target.value}`;\r\n  updateChartDisplay(value);\r\n});\r\n\r\n// css\r\nselect1Element.addEventListener("focus", () => {\r\n  inputField1.classList.add("focused");\r\n});\r\n\r\nselect1Element.addEventListener("blur", () => {\r\n  inputField1.classList.remove("focused");\r\n});\r\n\r\nselect2Element.addEventListener("focus", () => {\r\n  inputField2.classList.add("focused");\r\n});\r\n\r\nselect2Element.addEventListener("blur", () => {\r\n  inputField2.classList.remove("focused");\r\n});\r\n\n\n//# sourceURL=webpack://currency-quote-realtime/./src/script.js_+_7_modules?')}},__webpack_require__={};__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e;__webpack_require__.g.importScripts&&(e=__webpack_require__.g.location+"");var r=__webpack_require__.g.document;if(!e&&r&&(r.currentScript&&(e=r.currentScript.src),!e)){var n=r.getElementsByTagName("script");if(n.length)for(var t=n.length-1;t>-1&&!e;)e=n[t--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),__webpack_require__.p=e})();var __webpack_exports__={};__webpack_modules__["./src/script.js"](0,__webpack_exports__,__webpack_require__)})();